{"version":3,"sources":["logo.svg","componentes/imagenes/pokemonlogo.png","componentes/headers/AppHeader.js","componentes/lib/pokemon.js","componentes/ficha/typeColors.js","componentes/ficha/traduccionTipo.js","componentes/ficha/habilidadesPokemon.js","componentes/ficha/fichaPokemon.js","componentes/imagenes/cargando.gif","componentes/pantallas/PokemonesMostrar.js","componentes/lib/PokeApi.js","componentes/pantallas/ComboboxGeneraciones.js","componentes/pantallas/GeneracionesMostrar.js","componentes/pantallas/PokemonesMostrarFetch.js","componentes/pantallas/PokemonesEquipo.js","componentes/pantallas/PokemonesPorTiempo.js","componentes/pantallas/PokemonesAleatorios.js","componentes/pantallas/ComboboxTipos.js","componentes/ficha/InformacionPokemon.js","componentes/pantallas/PokemonesTodos.js","App.js","reportWebVitals.js","index.js"],"names":["AppHeader","className","style","backgroundColor","alt","src","LogoApp","React","Component","obtenerTodosLosPokemones","url","a","Promise","resolver","rechazo","fetch","then","respuesta","json","informacion","obtenerPokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","traduccionTipo","psychic","shadow","unknown","FichaDePokemon","pokemon","id","name","sprites","front_default","front_shiny","types","map","type","weight","height","onClick","nombrePokemon","nombrePokemonMostrar","charAt","toUpperCase","slice","localStorage","getItem","setItem","miEquipo","JSON","parse","pokemonEncontrado","indexOf","push","miEquipoUnico","filter","valor","indice","alert","stringify","agregarPokemonEquipo","splice","quitarPokemonEquipo","MostrarPokemonInformacion","useState","informacionPokemon","setInformacionPokemon","siguienteUrl","setSiguienteUrl","anteriorUrl","setAnteriorUrl","cargaPagina","setCargaPagina","urlApiPokemon","useEffect","next","previous","cargandoPokemon","results","fetchInformacion","siguientePagina","anteriorPagina","all","registroPokemon","_informacionPokemon","imagenCargando","i","baseApi","axios","create","baseURL","ApiGeneracion","method","idGeneracion","nombre","ComboboxGeneraciones","generaciones","onChange","selectedGeneracion","Object","entries","length","FormControl","variant","InputLabel","htmlFor","Select","native","value","aria-label","index","GeneracionesMostrar","pokemonesGeneracion","pokemonesGeneracionLista","PokemonesMostrarFetch","props","callback","onCall","state","fetchGeneraciones","dataRespuesta","data","setState","fetchInformacionGeneracion","generacion","listadoPokemonGeneracion","pokemon_species","listadoPokemon","forEach","listadoDePokemones","fetchInformacionPokemon","generacionInformacion","ordenamientoListaPokemon","listaOrdenadaPokemon","sort","b","onChangeGeneraciones","generacionSelected","target","undefined","this","isFound","selected","PropType","func","defaultProps","PokemonesEquipo","obtenerEquipoPokemon","pokemonesEquipo","nombrePokemonEquipo","listarEquipo","miEquipoListado","reduce","acumulador","item","PokemonPorTiempo","idPokemon","console","log","contador","idPokemonTiempo","namePokemonTiempo","spritePokemonTiempo","spriteShinyPokemonTiempo","intervalo","setInterval","clearInterval","controls","autoplay","idPokemonAleatorio","Math","round","random","ComboboxTipos","tipos","tipoSeleccionado","InformacionPokemon","Card","CardContent","Typography","component","PokemonesTodos","tipoPokemon","pokemones","informacionPokemones","obtenerInformacionDePokemones","cuentaLosTipos","agregarTipos","filtrarPokemonTipo","obtenerTipos","onChangeTipo","cantidad","App","tabIndex","updateTabIndex","TabContext","AppBar","position","TabList","event","Tab","label","TabPanel","PokemonesMostrar","PokemonesAleatorios","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62ea3887.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/pokemonlogo.6e223bd2.png\";","import React from 'react';\r\nimport LogoApp from '../imagenes/pokemonlogo.png';\r\nimport  '../estilos/style.css';\r\n\r\nclass AppHeader extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className = \"header\" style = {{backgroundColor: '#92a8d1'}}>\r\n                <img alt = \"header\" className = \"logo\" src = {LogoApp}></img>\r\n                <p>Pokemon Go API</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppHeader;","export async function obtenerTodosLosPokemones(url){\r\n    return new Promise((resolver, rechazo) => {\r\n        fetch(url)\r\n        .then(respuesta     => respuesta.json())\r\n        .then(informacion   => {\r\n            resolver(informacion);\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport async function obtenerPokemon(url){\r\n    return new Promise((resolver, rechazo) => {\r\n        fetch(url)\r\n        .then(respuesta => respuesta.json())\r\n        .then(informacion => {\r\n            resolver(informacion);\r\n        })\r\n    })\r\n}\r\n\r\nexport async function obtenerGeneraciones(url){\r\n    return new Promise((resolver, rechazo) => {\r\n        fetch(url)\r\n        .then(respuesta => respuesta.json())\r\n        .then(informacion => {\r\n            resolver(informacion);\r\n        })\r\n    })\r\n}","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#6A7BAF',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#CC9F4F',\r\n    normal: '#a4acaf',\r\n    pyschic: '#E5709B',\r\n    steel: '#89A1B0',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#CB5F48',\r\n    flying: '#7DA6DE',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#B2A061',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","const traduccionTipo = {\r\n    bug: 'bicho',\r\n    dragon: 'dragón',\r\n    fairy: 'hada',\r\n    fire: 'fuego',\r\n    ghost: 'fantasma',\r\n    ground: 'tierra',\r\n    normal: 'normal',\r\n    psychic: 'psíquico',\r\n    steel: 'acero',\r\n    dark: 'siniestro',\r\n    electric: 'eléctrico',\r\n    fighting: 'lucha',\r\n    flying: 'volador',\r\n    grass: 'planta',\r\n    ice: 'hielo',\r\n    poison: 'veneno',\r\n    rock: 'roca',\r\n    water: 'agua',\r\n    shadow: 'oscuro',\r\n    unknown: 'desconocido'\r\n}\r\n\r\nexport default traduccionTipo;","const habilidadesPokemon = {\r\n    \"stench\": \"Hedor\",\r\n    \"drizzle\": \"Llovizna\",\r\n    \"speed-boost\": \"Impulso\",\r\n    \"battle-armor\": \"Armadura batalla\",\r\n    \"sturdy\": \"Robustez\",\r\n    \"damp\": \"Humedad\",\r\n    \"limber\": \"Flexibilidad\",\r\n    \"sand-veil\": \"Velo arena\",\r\n    \"static\": \"Electricidad estática\",\r\n    \"volt-absorb\": \"Absorbe electricidad\",\r\n    \"water-absorb\": \"Absorbe agua\",\r\n    \"oblivious\": \"Despiste\",\r\n    \"cloud-nine\": \"Aclimatación\",\r\n    \"compound-eyes\": \"Ojo compuesto\",\r\n    \"insomnia\": \"Insomnio\",\r\n    \"color-change\": \"Cambio color\",\r\n    \"immunity\": \"Inmunidad\",\r\n    \"flash-fire\": \"Absorbe fuego\",\r\n    \"shield-dust\": \"Polvo escudo\",\r\n    \"own-tempo\": \"\",\r\n    \"suction-cups\": \"\",\r\n    \"intimidate\": \"\",\r\n    \"shadow-tag\": \"\",\r\n    \"rough-skin\": \"\",\r\n    \"wonder-guard\": \"\",\r\n    \"levitate\": \"\",\r\n    \"effect-spore\": \"\",\r\n    \"synchronize\": \"\",\r\n    \"clear-body\": \"\",\r\n    \"natural-cure\": \"\",\r\n    \"lightning-rod\": \"\",\r\n    \"serene-grace\": \"\",\r\n    \"swift-swim\": \"\",\r\n    \"chlorophyll\": \"\",\r\n    \"illuminate\": \"\",\r\n    \"trace\": \"\",\r\n    \"huge-power\": \"\",\r\n    \"poison-point\": \"\",\r\n    \"inner-focus\": \"\",\r\n    \"magma-armor\": \"\",\r\n    \"water-veil\": \"\",\r\n    \"magnet-pull\": \"\",\r\n    \"soundproof\": \"\",\r\n    \"rain-dish\": \"\",\r\n    \"sand-stream\": \"Chorro arena\",\r\n    \"pressure\": \"Presión\",\r\n    \"insomnia\": \"Insomnio\",\r\n}\r\n\r\nexport default habilidadesPokemon;","import React from 'react';\r\nimport '../estilos/style.css';\r\nimport typeColors from '../ficha/typeColors'\r\nimport traduccionTipo from '../ficha/traduccionTipo';\r\nimport habilidadesPokemon from '../ficha/habilidadesPokemon';\r\n\r\nfunction FichaDePokemon({ pokemon }){\r\n    \r\n    function agregarPokemonEquipo(nombrePokemon) {\r\n        const nombrePokemonMostrar = nombrePokemon.charAt(0).toUpperCase() + nombrePokemon.slice(1)\r\n        if(localStorage.getItem('miEquipo') == null){\r\n            localStorage.setItem('miEquipo', '[]')\r\n        }\r\n        const miEquipo          = JSON.parse(localStorage.getItem('miEquipo'))\r\n        const pokemonEncontrado = miEquipo.indexOf(nombrePokemon)\r\n        miEquipo.push(nombrePokemon)\r\n        const miEquipoUnico = miEquipo.filter((valor, indice)=>{\r\n            return miEquipo.indexOf(valor) === indice;\r\n        })\r\n        if(pokemonEncontrado != -1){\r\n            alert(\"Pokémon \"+nombrePokemonMostrar+ \" ya se encuentra agregado a tu equipo.\")\r\n        }else{\r\n            alert(\"Pokémon \"+nombrePokemonMostrar+ \" agregado a tu equipo.\")\r\n        }\r\n        localStorage.setItem('miEquipo', JSON.stringify(miEquipoUnico))\r\n      }\r\n\r\n      function quitarPokemonEquipo(nombrePokemon) {\r\n        const nombrePokemonMostrar = nombrePokemon.charAt(0).toUpperCase() + nombrePokemon.slice(1)\r\n        if(localStorage.getItem('miEquipo') == null){\r\n            localStorage.setItem('miEquipo', '[]')\r\n        }\r\n        const miEquipo = JSON.parse(localStorage.getItem('miEquipo'))\r\n        const pokemonEncontrado = miEquipo.indexOf(nombrePokemon)\r\n        if(pokemonEncontrado != -1){\r\n            miEquipo.splice(pokemonEncontrado, 1)\r\n            alert(\"Pokémon \"+nombrePokemonMostrar+ \" ha sido quitado de tu equipo.\")\r\n        }else{\r\n            alert(\"Pokémon \"+nombrePokemonMostrar+ \" no esta en tu equipo.\")\r\n        }\r\n        localStorage.setItem('miEquipo', JSON.stringify(miEquipo))\r\n      }\r\n    \r\n    return (\r\n        <div className=\"Ficha\">\r\n            <div className=\"Ficha__name\">\r\n                <p className=\"title\">#{pokemon.id} {pokemon.name}</p>\r\n            </div>\r\n            <div className=\"Ficha__img\">\r\n                <img src={pokemon.sprites.front_default}/>\r\n                <img src={pokemon.sprites.front_shiny}/>\r\n            </div>\r\n            <div className=\"Ficha__types\">\r\n                {\r\n                    pokemon.types.map(type => {\r\n                        return (\r\n                            <div className=\"Ficha__type\" style={{ backgroundColor: typeColors[type.type.name] }}>\r\n                                {traduccionTipo[type.type.name]}\r\n                            \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"Ficha__info\">\r\n                <div className=\"Ficha__data Ficha__data--weight\">\r\n                    <p className=\"title\">Peso</p>\r\n                    <p>{pokemon.weight}</p>\r\n                </div>\r\n                <div className=\"Ficha__data Ficha__data--weight\">\r\n                    <p className=\"title\">Altura</p>\r\n                    <p>{pokemon.height}</p>\r\n                </div> \r\n\r\n                <div className = \"contenedorBotones\">\r\n                    <div className = \"btn\">\r\n                        <button onClick={() => agregarPokemonEquipo(pokemon.name)}>Agregar a mi equipo.</button>\r\n                    </div>\r\n                    <div className = \"btn\">\r\n                        <button onClick={() => quitarPokemonEquipo(pokemon.name)}>Quitar de mi equipo.</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FichaDePokemon;","export default __webpack_public_path__ + \"static/media/cargando.176efa05.gif\";","import React, { useState, useEffect } from 'react';\r\nimport { obtenerTodosLosPokemones , obtenerPokemon} from '../lib/pokemon';\r\nimport FichaDePokemon from '../ficha/fichaPokemon';\r\nimport imagenCargando from '../imagenes/cargando.gif';\r\n\r\nfunction MostrarPokemonInformacion(){\r\n    const [informacionPokemon,  setInformacionPokemon]          = useState([]);\r\n    const [siguienteUrl,        setSiguienteUrl]                = useState('');\r\n    const [anteriorUrl,         setAnteriorUrl]                 = useState('');\r\n    const [cargaPagina,         setCargaPagina]                 = useState(true);\r\n    const urlApiPokemon                                         = 'https://pokeapi.co/api/v2/pokemon/'\r\n\r\n    useEffect(() => {\r\n        async function fetchInformacion() {\r\n            const respuesta = await obtenerTodosLosPokemones(urlApiPokemon);\r\n            setSiguienteUrl(respuesta.next);\r\n            setAnteriorUrl(respuesta.previous);\r\n            const pokemon = await cargandoPokemon(respuesta.results)\r\n            setCargaPagina(false);\r\n        }\r\n        fetchInformacion();\r\n    }, []);\r\n\r\n    const siguientePagina = async () => {\r\n        setCargaPagina(true)\r\n        const informacion = await obtenerTodosLosPokemones(siguienteUrl)\r\n        await cargandoPokemon(informacion.results)\r\n        setSiguienteUrl(informacion.next);\r\n        setAnteriorUrl(informacion.previous);\r\n        setCargaPagina(false)\r\n    }\r\n\r\n    const anteriorPagina = async () => {\r\n        if (!anteriorUrl) return;\r\n        setCargaPagina(true)\r\n        const informacion = await obtenerTodosLosPokemones(anteriorUrl)\r\n        await cargandoPokemon(informacion.results)\r\n        setSiguienteUrl(informacion.next);\r\n        setAnteriorUrl(informacion.previous);\r\n        setCargaPagina(false)\r\n    }\r\n\r\n    const cargandoPokemon = async informacion => {\r\n        const _informacionPokemon            = await Promise.all(\r\n                informacion.map(async pokemon => {\r\n                const registroPokemon = await obtenerPokemon(pokemon.url);\r\n                return registroPokemon;\r\n        }));\r\n\r\n        setInformacionPokemon(_informacionPokemon);\r\n\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            { cargaPagina ? <h1> <img src = {imagenCargando} className = \"cargandoPokemon\"></img> Cargando registros</h1> : (\r\n                <>\r\n                    <div className = \"btn\">\r\n                        <button onClick = {anteriorPagina}>\r\n                            Anterior\r\n                        </button>\r\n                        <button onClick = {siguientePagina}>\r\n                            Siguiente\r\n                        </button>\r\n                    </div>\r\n                    <div className = 'grid-container'>\r\n                    {\r\n                        informacionPokemon.map((pokemon, i) => {\r\n                            return <FichaDePokemon key = {i} pokemon = {pokemon}></FichaDePokemon>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MostrarPokemonInformacion;","import axios from 'axios';\r\n\r\nconst baseApi = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2'\r\n})\r\n\r\nexport const ApiGeneracion = {\r\n    getGeneraciones: () => baseApi({\r\n       method: 'GET',\r\n       url: '/generation/'\r\n    }),\r\n    getPokemonPorGeneracion: (idGeneracion) => baseApi({\r\n        method: 'GET',\r\n        url: idGeneracion\r\n    }),\r\n    getPokemonInformacion: (nombre) => baseApi({\r\n        method: 'GET',\r\n        url: `/pokemon/${nombre}`\r\n    }),\r\n    getTodosLosPokemon: () => baseApi({\r\n        method: 'GET',\r\n        url: '/pokemon/?offset1=&limit=1118'\r\n    }),\r\n    getTodosLosTipos: () => baseApi({\r\n        method: 'GET',\r\n        url: '/type/'\r\n    })\r\n}\r\n\r\n","import { FormControl, InputLabel, Select } from '@material-ui/core'\r\nimport '../estilos/style.css'\r\n\r\nconst ComboboxGeneraciones = ({ generaciones = {}, onChange = () => {}, selectedGeneracion }) => Object.entries(generaciones).length\r\n    ?(\r\n        <div className=\"combobox\">\r\n            <FormControl variant=\"filled\">\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">Listado</InputLabel>\r\n                <Select\r\n                native\r\n                value       = { selectedGeneracion }\r\n                onChange    = { onChange }\r\n                >\r\n                    <option aria-label=\"None\" value=\"\">Seleccione generación</option>\r\n                    {\r\n                        generaciones.map(({name,url},index) =>(\r\n                            <option key={`${name}_${index}`} value={url}>{name}</option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n    :null\r\n\r\n\r\nexport default ComboboxGeneraciones;","import React from 'react';\r\nimport FichaDePokemon from '../ficha/fichaPokemon';\r\n\r\nconst GeneracionesMostrar = ({pokemonesGeneracion = []}) => pokemonesGeneracion.length ? (\r\n    <div className = 'grid-container'>\r\n                    {\r\n                        pokemonesGeneracion.map((pokemonesGeneracionLista, i) => {\r\n                            return <FichaDePokemon key = {`${i}_${pokemonesGeneracionLista.id}`} pokemon = {pokemonesGeneracionLista}></FichaDePokemon>\r\n                        })\r\n                    }\r\n                    </div>\r\n) : <h1>No hay información.</h1>\r\n\r\n\r\nexport default GeneracionesMostrar;","import { Component } from \"react\";\r\nimport '../estilos/style.css';\r\nimport { ApiGeneracion } from \"../lib/PokeApi\"\r\nimport PropType from 'prop-types';\r\nimport \"../estilos/style.css\";\r\nimport ComboboxGeneraciones from \"./ComboboxGeneraciones\";\r\nimport GeneracionesMostrar from \"../pantallas/GeneracionesMostrar\";\r\n\r\n\r\nexport default class PokemonesMostrarFetch extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            generaciones: [],\r\n            generacionSelected: '',\r\n            generacionInformacion: undefined,\r\n            pokemonesGeneracion: [],\r\n        }\r\n    }\r\n\r\n    callback = () => {\r\n        const { onCall }            = this.props;\r\n        const { generaciones }      = this.state;\r\n        onCall(generaciones);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchGeneraciones()\r\n    }\r\n\r\n    fetchGeneraciones = async () => {\r\n        const respuesta                 = await ApiGeneracion.getGeneraciones()\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const generaciones              = dataRespuesta.results || [];\r\n        this.setState({ generaciones }, this.callback)\r\n    }\r\n\r\n    fetchInformacionGeneracion = async (generacion) => {\r\n        const respuesta                 = await ApiGeneracion.getPokemonPorGeneracion(generacion)\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const listadoPokemonGeneracion  = dataRespuesta.pokemon_species || [];\r\n        const listadoPokemon = []       = listadoPokemonGeneracion;\r\n        this.setState({ pokemonesGeneracion: []});\r\n        listadoPokemon.forEach(\r\n            listadoDePokemones => \r\n            this.fetchInformacionPokemon(listadoDePokemones.name)\r\n        )\r\n        this.setState({generacionInformacion: listadoPokemonGeneracion})\r\n    }\r\n\r\n    fetchInformacionPokemon = async (nombrePokemon) => {\r\n        const respuesta                 = await ApiGeneracion.getPokemonInformacion(nombrePokemon)\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const { pokemonesGeneracion }   = this.state;\r\n        pokemonesGeneracion.push(respuesta.data)\r\n        this.ordenamientoListaPokemon(pokemonesGeneracion)\r\n        this.setState({ pokemonesGeneracion: pokemonesGeneracion});\r\n    }\r\n\r\n    ordenamientoListaPokemon = (pokemonesGeneracion = []) => {\r\n        const listaOrdenadaPokemon = pokemonesGeneracion.sort(function (a, b) {\r\n            if (a.id > b.id) {\r\n              return 1;\r\n            }\r\n            if (a.id < b.id) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          })\r\n        return listaOrdenadaPokemon;\r\n    }\r\n\r\n    onChangeGeneraciones = ({ target: { value: generacionSelected }}) => {\r\n        this.setState({ generacionSelected })\r\n        this.fetchInformacionGeneracion(generacionSelected)\r\n    }\r\n\r\n    render(){\r\n        const { generaciones, generacionSelected, generacionInformacion,  pokemonesGeneracion}      = this.state;\r\n        const { isFound }                               = generaciones.length\r\n        \r\n        return(\r\n            <>  \r\n                <div className = \"btn\">\r\n                    \r\n                    <button  onClick={() => {this.fetchGeneraciones()}}>\r\n                        Cargar generaciónes\r\n                    </button>\r\n                    \r\n                </div>\r\n                <ComboboxGeneraciones       generaciones        = { generaciones } onChange = {this.onChangeGeneraciones} selected = { generacionSelected }></ComboboxGeneraciones>\r\n                <GeneracionesMostrar        pokemonesGeneracion = { pokemonesGeneracion }></GeneracionesMostrar>\r\n            </>\r\n        )\r\n\r\n   }\r\n}\r\n\r\nPokemonesMostrarFetch.props = {\r\n    onCall: PropType.func,\r\n}\r\n\r\nPokemonesMostrarFetch.defaultProps = {\r\n    onCall: () => {},\r\n}","import { React, Component } from 'react';\r\nimport { ApiGeneracion } from \"../lib/PokeApi\"\r\nimport GeneracionesMostrar from \"../pantallas/GeneracionesMostrar\";\r\n\r\nexport default class PokemonesEquipo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            pokemonesEquipo: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.obtenerEquipoPokemon()\r\n    }\r\n\r\n    obtenerEquipoPokemon = () => {\r\n        this.setState({ pokemonesEquipo: []});\r\n        if(localStorage.getItem(\"miEquipo\") != null){\r\n            const miEquipo = JSON.parse(localStorage.getItem('miEquipo'))\r\n            miEquipo.forEach(\r\n                nombrePokemonEquipo => \r\n                this.fetchInformacionPokemon(nombrePokemonEquipo)\r\n            )\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    fetchInformacionPokemon = async (nombrePokemon) => {\r\n        const respuesta                 = await ApiGeneracion.getPokemonInformacion(nombrePokemon)\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const { pokemonesEquipo }       = this.state;\r\n        pokemonesEquipo.push(respuesta.data)\r\n        this.ordenamientoListaPokemon(pokemonesEquipo)\r\n        this.setState({ pokemonesEquipo: pokemonesEquipo});\r\n    }\r\n\r\n    ordenamientoListaPokemon = (pokemonesGeneracion = []) => {\r\n        const listaOrdenadaPokemon = pokemonesGeneracion.sort(function (a, b) {\r\n            if (a.id > b.id) {\r\n              return 1;\r\n            }\r\n            if (a.id < b.id) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          })\r\n        return listaOrdenadaPokemon;\r\n    }\r\n\r\n    listarEquipo = () =>{\r\n        const miEquipo              = JSON.parse(localStorage.getItem('miEquipo'))\r\n        const miEquipoListado       = miEquipo.reduce((acumulador, item) =>{\r\n                return acumulador + ' ' + item.charAt(0).toUpperCase() + item.slice(1);\r\n        },'')\r\n        alert(\"Tu equipo esta conformado por: \"+miEquipoListado)\r\n    }\r\n\r\n    render(){\r\n        const { pokemonesEquipo }           = this.state;\r\n        return(\r\n            <> \r\n            <div className = \"btn\">\r\n                    <button  onClick={() => {this.obtenerEquipoPokemon()}}>\r\n                        Cargar equipo\r\n                    </button>\r\n                    <button  onClick={() => {this.listarEquipo()}}>\r\n                        Listar equipo\r\n                    </button>\r\n            </div>\r\n            <GeneracionesMostrar        pokemonesGeneracion = { pokemonesEquipo }></GeneracionesMostrar>\r\n            </>\r\n        )\r\n\r\n   }\r\n}","import React, {Component} from 'react';\r\nimport '../estilos/style.css';\r\nimport { ApiGeneracion } from \"../lib/PokeApi\";\r\n\r\nclass PokemonPorTiempo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        localStorage.setItem(\"idPokemonTiempo\",\"\")\r\n        localStorage.setItem(\"namePokemonTiempo\",\"\")\r\n        localStorage.setItem(\"spritePokemonTiempo\",\"\")\r\n        localStorage.setItem(\"spriteShinyPokemonTiempo\",\"\")\r\n        this.state = {\r\n            contador: 1,\r\n            idPokemonTiempo: '',\r\n            namePokemonTiempo: '',\r\n            spritePokemonTiempo: '',\r\n            spriteShinyPokemonTiempo: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.intervalo = setInterval(()=> {\r\n            this.fetchInformacionPokemon(this.state.contador)\r\n            this.setState({\r\n                contador: this.state.contador + 1,\r\n                idPokemonTiempo: localStorage.getItem(\"idPokemonTiempo\"),\r\n                namePokemonTiempo: localStorage.getItem(\"namePokemonTiempo\"),\r\n                spritePokemonTiempo: localStorage.getItem(\"spritePokemonTiempo\"),\r\n                spriteShinyPokemonTiempo: localStorage.getItem(\"spriteShinyPokemonTiempo\"),\r\n            })\r\n            \r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalo)\r\n    }\r\n\r\n    fetchInformacionPokemon = async (idPokemon) => {\r\n        const respuesta                 = await ApiGeneracion.getPokemonInformacion(idPokemon)\r\n        const { data: dataRespuesta }   = respuesta;\r\n        console.log(respuesta.data.id)\r\n        localStorage.setItem(\"idPokemonTiempo\", respuesta.data.id)\r\n        localStorage.setItem(\"namePokemonTiempo\", respuesta.data.name)\r\n        localStorage.setItem(\"spritePokemonTiempo\", respuesta.data.sprites.front_default)\r\n        localStorage.setItem(\"spriteShinyPokemonTiempo\", respuesta.data.sprites.front_shiny)\r\n    }\r\n\r\n    render(){\r\n        const { contador , idPokemonTiempo , namePokemonTiempo, spritePokemonTiempo, spriteShinyPokemonTiempo} = this.state;\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"Ficha__img\">\r\n                    <img src={spritePokemonTiempo}/>\r\n                </div>\r\n                <div className=\"Ficha__name\">\r\n                    <p className=\"title\"> {namePokemonTiempo} </p>\r\n                </div>\r\n                <div>\r\n                <audio controls autoplay\r\n                    src= \"https://vgmsite.com/soundtracks/super-mario-world-original-soundtrack/icmlynpk/28%20-%20Ending.mp3\">\r\n                </audio>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonPorTiempo;","import React, {Component} from 'react';\r\nimport '../estilos/style.css';\r\nimport { ApiGeneracion } from \"../lib/PokeApi\";\r\n\r\nclass PokemonPorTiempo extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        localStorage.setItem(\"idPokemonTiempo\",\"\")\r\n        localStorage.setItem(\"namePokemonTiempo\",\"\")\r\n        localStorage.setItem(\"spritePokemonTiempo\",\"\")\r\n        localStorage.setItem(\"spriteShinyPokemonTiempo\",\"\")\r\n        this.state = {\r\n            contador: 151,\r\n            idPokemonTiempo: '',\r\n            namePokemonTiempo: '',\r\n            spritePokemonTiempo: '',\r\n            spriteShinyPokemonTiempo: '',\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        this.intervalo = setInterval(()=> {\r\n            this.fetchInformacionPokemon(this.state.contador)\r\n            this.setState({\r\n                contador: this.idPokemonAleatorio(),\r\n                idPokemonTiempo: localStorage.getItem(\"idPokemonTiempo\"),\r\n                namePokemonTiempo: localStorage.getItem(\"namePokemonTiempo\"),\r\n                spritePokemonTiempo: localStorage.getItem(\"spritePokemonTiempo\"),\r\n                spriteShinyPokemonTiempo: localStorage.getItem(\"spriteShinyPokemonTiempo\"),\r\n            })\r\n            \r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.intervalo)\r\n    }\r\n\r\n    fetchInformacionPokemon = async (idPokemon) => {\r\n        const respuesta                 = await ApiGeneracion.getPokemonInformacion(idPokemon)\r\n        const { data: dataRespuesta }   = respuesta;\r\n        console.log(respuesta.data.id)\r\n        localStorage.setItem(\"idPokemonTiempo\", respuesta.data.id)\r\n        localStorage.setItem(\"namePokemonTiempo\", respuesta.data.name)\r\n        localStorage.setItem(\"spritePokemonTiempo\", respuesta.data.sprites.front_default)\r\n        localStorage.setItem(\"spriteShinyPokemonTiempo\", respuesta.data.sprites.front_shiny)\r\n    }\r\n\r\n    idPokemonAleatorio = () => {\r\n        const idPokemonAleatorio = Math.round(Math.random() * (1118 - 1) + 1);\r\n        return idPokemonAleatorio;\r\n    }\r\n\r\n    render(){\r\n        const { contador , idPokemonTiempo , namePokemonTiempo, spritePokemonTiempo, spriteShinyPokemonTiempo} = this.state;\r\n        \r\n        return(\r\n            <div>\r\n                <div className=\"Ficha__img\">\r\n                    <img src={spriteShinyPokemonTiempo}/>\r\n                </div>\r\n                <div>\r\n                <audio controls autoplay\r\n                    src= \"https://vgmsite.com/soundtracks/pokemon-gameboy-sound-collection/vvdpydwp/101-opening.mp3\">\r\n                </audio>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonPorTiempo;","import { FormControl, InputLabel, Select } from '@material-ui/core'\r\nimport '../estilos/style.css'\r\nimport traduccionTipo from '../ficha/traduccionTipo';\r\n\r\nconst ComboboxTipos = ({ tipos = {}, onChange = () => {}, tipoSeleccionado, }) => Object.entries(tipos).length\r\n    ?(\r\n        <div className=\"combobox\">\r\n            <FormControl variant=\"filled\">\r\n                <InputLabel htmlFor=\"filled-age-native-simple\">Listado</InputLabel>\r\n                <Select\r\n                native\r\n                value       = { tipoSeleccionado }\r\n                onChange    = { onChange }\r\n                >\r\n                    <option aria-label=\"None\" value=\"\">Seleccione tipo</option>\r\n                    {\r\n                        tipos.map(({name},index) =>(\r\n                            <option key={`${name}_${index}`} value={name}>{traduccionTipo[name]}</option>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <> \r\n                \r\n                </>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n    :null\r\n\r\n\r\nexport default ComboboxTipos;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '../estilos/style.css'\r\n\r\nconst InformacionPokemon = ({ informacionPokemon = {}}) => Object.entries(informacionPokemon).length\r\n    ?(\r\n        \r\n    <Card>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                   <h>Cantidad de Pokémones por tipo:</h> {informacionPokemon.length}\r\n                </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    )\r\n    :<h3>Sin información.</h3>\r\n\r\n\r\nexport default InformacionPokemon;\r\n","import { React, Component } from 'react';\r\nimport { ApiGeneracion } from \"../lib/PokeApi\";\r\nimport GeneracionesMostrar from \"../pantallas/GeneracionesMostrar\";\r\nimport ComboboxTipos from \"../pantallas/ComboboxTipos\";\r\nimport PropType from 'prop-types';\r\nimport InformacionPokemon from '../ficha/InformacionPokemon';\r\nexport default class PokemonesTodos extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            informacionPokemones: [],\r\n            tipos: [],\r\n            tipoSeleccionado: '',\r\n            cantidad: [],\r\n            tipoPokemon: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.obtenerTipos()\r\n    }\r\n\r\n    callback = () => {\r\n        const { onCall }                        = this.props;\r\n        const { tipos}    = this.state;\r\n        onCall(tipos);\r\n    }\r\n\r\n    obtenerTodosLosPokemones = async () => {\r\n        this.setState({ tipoPokemon: []});\r\n        const respuesta                 = await ApiGeneracion.getTodosLosPokemon()\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const pokemones                 = dataRespuesta.results || [];\r\n        this.setState({ informacionPokemones: []});\r\n        pokemones.map(({name},index) =>(\r\n            this.obtenerInformacionDePokemones(name)\r\n        ))\r\n    }\r\n\r\n    cuentaLosTipos = (tipos = []) =>{\r\n        const { tipoSeleccionado }      = this.state;\r\n        const encontrado                = tipos.filter(item => {\r\n            return item = tipoSeleccionado;\r\n        })\r\n    }\r\n\r\n    agregarTipos = (name = '') => {\r\n        const { tipoSeleccionado, tipoPokemon}      = this.state;\r\n        tipoPokemon.push(name)\r\n        this.setState({ tipoPokemon: tipoPokemon});\r\n    }\r\n\r\n    filtrarPokemonTipo = () => {\r\n        const { tipoPokemon, tipoSeleccionado } = this.state;\r\n        var indice      = 0;\r\n        var contador    = 0;\r\n        for(indice = 0; indice<tipoPokemon.length;indice++){\r\n            if(tipoPokemon===tipoSeleccionado){\r\n                console.log(\"if: \"+tipoPokemon)\r\n                contador++\r\n            }else{\r\n                console.log(\"else: \"+tipoPokemon)\r\n            }\r\n        }\r\n        console.log(contador)\r\n    }\r\n\r\n    obtenerInformacionDePokemones = async (nombre) =>{\r\n        const respuesta                 = await ApiGeneracion.getPokemonInformacion(nombre);\r\n        const informacionPokemon        = respuesta.data\r\n        const tiposDelPokemon           = informacionPokemon.types.map(({type},index) =>{\r\n                this.agregarTipos(type.name)\r\n                return type.name;\r\n            }\r\n        )\r\n    }\r\n\r\n    obtenerTipos = async () =>{\r\n        const respuesta                 = await ApiGeneracion.getTodosLosTipos();\r\n        const { data: dataRespuesta }   = respuesta;\r\n        const tipos                     = dataRespuesta.results || [];\r\n        this.setState({ tipos: tipos}, this.callback);\r\n    }\r\n    \r\n    onChangeTipo = ({ target: { value: tipoSeleccionado }}) => {\r\n        this.setState({ tipoSeleccionado: tipoSeleccionado })\r\n        this.filtrarPokemonTipo()\r\n    }\r\n\r\n    render(){\r\n        const { tipos, informacionPokemones, tipoSeleccionado, tipoPokemon }      = this.state;\r\n        \r\n        return(\r\n            <div>\r\n                <div className = \"btn\">\r\n                    <button  onClick={() => {this.obtenerTodosLosPokemones()}}>\r\n                        Cargar Pokémones\r\n                    </button>\r\n                    <div>\r\n                        {tipoSeleccionado}\r\n                    </div>\r\n                </div>\r\n                <ComboboxTipos              tipos               = { tipos } onChange = {this.onChangeTipo} selected = { tipoSeleccionado }/>\r\n                <InformacionPokemon         informacionPokemon  = {tipoPokemon}></InformacionPokemon>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPokemonesTodos.props = {\r\n    onCall: PropType.func,\r\n}\r\n\r\nPokemonesTodos.defaultProps = {\r\n    onCall: () => {},\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport AppHeader from './componentes/headers/AppHeader';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { AppBar, Tab } from '@material-ui/core';\nimport { useState } from 'react';\nimport PokemonesMostrar from './componentes/pantallas/PokemonesMostrar';\nimport PokemonesMostrarFetch from './componentes/pantallas/PokemonesMostrarFetch';\nimport PokemonesEquipo from './componentes/pantallas/PokemonesEquipo';\nimport PokemonPorTiempo from './componentes/pantallas/PokemonesPorTiempo';\nimport PokemonesAleatorios from './componentes/pantallas/PokemonesAleatorios';\nimport PokemonesTodos from './componentes/pantallas/PokemonesTodos';\n\nfunction App() {\n  const [tabIndex, updateTabIndex] = useState('1')\n  const onChangeTabIndex = (event, value) => updateTabIndex(value)\n  return (\n    <div className=\"App\">\n    <AppHeader/>\n    <TabContext value = {tabIndex}>\n      <AppBar position = \"static\">\n\n        <TabList onChange = {onChangeTabIndex}>\n          <Tab label = \"Inicio\" value = \"1\"></Tab>\n          <Tab label = \"Listado de Pokémon\" value = \"2\"></Tab>\n          <Tab label = \"Pokémon por generación\" value = \"3\"></Tab>\n          <Tab label = \"Tu equipo Pokémon\" value = \"4\"></Tab>\n          <Tab label = \"Pokémon por tiempo\" value = \"5\"></Tab>\n          <Tab label = \"Pokémon aleatorio\" value = \"6\"></Tab>\n        </TabList>\n\n      </AppBar>\n\n      <TabPanel value = \"1\">\n        <p>Bienvenido a los uso de API de Pokemon GO.</p>\n      </TabPanel>\n\n      <TabPanel value = \"2\">\n      <PokemonesMostrar/>\n      </TabPanel>\n\n      <TabPanel value = \"3\">\n      <PokemonesMostrarFetch/>\n      </TabPanel>\n      <TabPanel value = \"4\">\n      <PokemonesEquipo/>\n      </TabPanel>\n      <TabPanel value = \"5\">\n      <PokemonPorTiempo/>\n      </TabPanel>\n      <TabPanel value = \"6\">\n      <PokemonesAleatorios/>\n      </TabPanel>\n    </TabContext>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}